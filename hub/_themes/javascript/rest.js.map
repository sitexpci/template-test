{"version":3,"sources":["webpack:///webpack/bootstrap d5cfca0d288de75ee6f6?1743**","webpack:///./rest.js"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uDAA+C,4BAA4B;AAC3E;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wE,yCAAA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,iCAAiC;;AAE9F;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA,MAAK;AACL,E;iEAAC","file":"rest.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n \t\twhile(callbacks.length)\n \t\t\tcallbacks.shift().call(null, __webpack_require__);\n\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// \"0\" means \"already loaded\"\n \t// Array means \"loading\", array contains callbacks\n \tvar installedChunks = {\n \t\t9:0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn callback.call(null, __webpack_require__);\n\n \t\t// an array means \"currently loading\".\n \t\tif(installedChunks[chunkId] !== undefined) {\n \t\t\tinstalledChunks[chunkId].push(callback);\n \t\t} else {\n \t\t\t// start chunk loading\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\tvar script = document.createElement('script');\n \t\t\tscript.type = 'text/javascript';\n \t\t\tscript.charset = 'utf-8';\n \t\t\tscript.async = true;\n\n \t\t\tscript.src = __webpack_require__.p + \"\" + {\"10\":\"8b250ead426722080bff\"}[chunkId] + \".js\";\n \t\t\thead.appendChild(script);\n \t\t}\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d5cfca0d288de75ee6f6\n **/","// DOCS uses docpacker to finalize the theme path. In order to deal with the dynamic path issue,\n// the function provides the entry script path as the module path for the webpack loading system.\nfunction getPublicPath() {\n    'use strict';\n    var scriptEls = document.getElementsByTagName('script');\n    var thisScriptEl = scriptEls[scriptEls.length - 1];\n    var scriptPath = thisScriptEl.src;\n    return scriptPath.substr(0, scriptPath.lastIndexOf('/') + 1);\n}\n__webpack_public_path__ = getPublicPath();\n\n/**\r\n * This js is entry for integrating try-it feature on Rest apis. It will:\r\n *  1. find all swagger urls and try to resolve these urls.\r\n *  2. load vue templates for parameter form/request/response.\r\n */\r\nrequire(['lodash', 'q', 'vue', 'swagger-api', 'swagger-registry', 'rest.tpl', 'swagger-runner'], function(_, Q, Vue, SwaggerApi, SwaggerRegistry, RestTemplate, SwaggerRunner) {\r\n    \"use strict\";\r\n\r\n    $(\"div.api-example[data-api-swagger-url]\").each(function() {\r\n        SwaggerRegistry.registerSwaggerApi($(this).data('api-swagger-url'));\r\n    });\r\n\r\n    var buildParameterModel = function(param) {\r\n        var newModel = {};\r\n        newModel.name = param.name;\r\n        newModel.required = param.required;\r\n        var type = param.type || param.dataType;\r\n        if (typeof type === 'undefined') {\r\n            var schema = param.schema;\r\n            if (schema && schema.$ref) {\r\n                var ref = schema.$ref;\r\n                param.default = param.default || schema.example;\r\n                if (ref.indexOf('#/definitions/') === 0) {\r\n                    type = ref.substring('#/definitions/'.length);\r\n                } else {\r\n                    type = ref;\r\n                }\r\n            }\r\n        }\r\n\r\n        newModel.type = type;\r\n\r\n        newModel.isArray = newModel.type.toLowerCase() === 'array' || param.allowMultiple;\r\n        newModel.isArray = !!newModel.isArray;\r\n        newModel.paramType = param.in || param.paramType;\r\n        newModel.isBody = param.paramType === 'body' || param.in === 'body';\r\n\r\n        if(typeof param.default === 'undefined') {\r\n            param.default = param.defaultValue;\r\n        }\r\n\r\n        var defaultValue = newModel.isArray && Array.isArray(param.default) ? param.default.join('\\n') : param.default;\r\n        if (_.isObject(defaultValue)) {\r\n            defaultValue = JSON.stringify(defaultValue, null, 4);\r\n        }\r\n\r\n        newModel.default = defaultValue;\r\n        newModel.hasDefault = (typeof param.default !== 'undefined');\r\n        newModel.valueId = 'm' + param.name + new Date().getTime();\r\n        if (param.allowableValues) {\r\n            newModel.isList = true;\r\n            newModel.allowableValues = param.allowableValues;\r\n        }\r\n        newModel.enum = param.enum;\r\n        return newModel;\r\n    };\r\n\r\n    var buildExample = function(definition) {\r\n        var example;\r\n        if (definition.examples && _.isPlainObject(definition.examples) && definition.examples['application/json']) {\r\n            example =  definition.examples['application/json'];\r\n        } else if (!definition.example) {\r\n            example = definition.examples;\r\n        }\r\n        return (_.isString(example) || _.isUndefined(example))? example : JSON.stringify(example, null, 4);\r\n    };\r\n\r\n    Q.all([SwaggerRegistry.resolveAll(), RestTemplate.loadTemplates()]).then(function() {\r\n        $(\"div.api-example[data-api-operation-id]\").each(function() {\r\n            var operationId = $(this).data('api-operation-id').replace(/\\s+/g, '_');\r\n            var swaggerUrl = $(this).data('api-swagger-url');\r\n            var proxyUrl = $(this).data('api-example-endpoint');\r\n            // hard-coded runner for graph api, need to be-refactored later\r\n            SwaggerRunner.register(proxyUrl, \"url\", \"Bearer {token:https://graph.windows.net/}\");\r\n\r\n            var api = SwaggerRegistry.getApi(swaggerUrl);\r\n            if (api && api.isBuilt && api.isValid) {\r\n                var operation = api.getOperationById(operationId);\r\n                if (operation) {\r\n                    var parameterModels = _.map(operation.parameters, buildParameterModel);\r\n                    var restFormId = operationId + Math.random().toString().slice(2);\r\n                    $(this).attr('id', restFormId);\r\n\r\n                    var responseSamples = _.map(_.values(operation.responses), buildExample);\r\n                    var vue = new Vue({\r\n                        el: '#' + restFormId,\r\n                        template: '#rest-form',\r\n                        data: {\r\n                            \"proxy_url\" : proxyUrl,\r\n                            \"swagger_url\" : swaggerUrl,\r\n                            \"parameters\": parameterModels,\r\n                            \"operation_id\": operationId,\r\n                            \"sample_response\" : responseSamples.length ? responseSamples[0] : ''\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }).catch(function(err) {\r\n        console.log(err);\r\n    });\r\n});\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./rest.js\n ** module id = 0\n ** module chunks = 9\n **/"],"sourceRoot":""}